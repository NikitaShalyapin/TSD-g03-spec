package icrash.operations.environment.actCoordinator.oeSetCrisisStatus {

import lu.uni.lassy.messir.libraries.primitives

import icrash.concepts.primarytypes.datatypes
import icrash.concepts.primarytypes.classes
import icrash.environment

Operation Model {	
operation: actCoordinator.outactCoordinator.oeSetCrisisStatus(AdtCrisisID:dtCrisisID, AetCrisisStatus:etCrisisStatus):ptBoolean{

preP{
  let TheSystem: ctState in
  let TheActor:actCoordinator in
  
  self.rnActor.rnSystem = TheSystem
  and self.rnActor = TheCoordinator
  
/* PreP01 */
  and TheSystem.vpStarted = true
/* PreP02 */
  and TheActor.rnctAuthenticated.vpIsLogged = true
}

preF{
/* PreF01 */
  TheSystem.rnctCrisis->select(id.eq(AdtCrisisID))
  = ColctCrisis
  and ColctCrisis->size().eq(1)
}

postF{
  let TheSystem: ctState in
  let TheActor:actAuthenticated in
  
  self.rnActor.rnSystem = TheSystem
  and self.rnActor = TheActor
  
  and TheSystem.rnctCrisis->select(id.eq(AdtCrisisID))
  = ColctCrisis
  
  /* PostF01 */
  and ColctCrisis->forAll(T:ctCrisis | T.status@post=AetCrisisStatus )
	TheActor.rnInterfaceIN^ieMessage('The crisis status has been updated !')
}

postP{
  let TheSystem: ctState in
  let TheActor:actCoordinator in
  
  self.rnActor.rnSystem = TheSystem
  and self.rnActor = TheActor
  
  
  /* PostP01 */
  and if(AetCrisisStatus.eq(etCrisisStatus.solved))
  then(
  TheActor.handledCrises@post=TheActor.handledCrises+1
  )
  else true
endif
}

}

}
}